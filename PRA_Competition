{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":91721,"databundleVersionId":13760552,"sourceType":"competition"}],"dockerImageVersionId":31153,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:46.808541Z","iopub.execute_input":"2025-10-09T09:08:46.808770Z","iopub.status.idle":"2025-10-09T09:08:46.816942Z","shell.execute_reply.started":"2025-10-09T09:08:46.808753Z","shell.execute_reply":"2025-10-09T09:08:46.816021Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s5e10/sample_submission.csv\n/kaggle/input/playground-series-s5e10/train.csv\n/kaggle/input/playground-series-s5e10/test.csv\n","output_type":"stream"}],"execution_count":14},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:46.818421Z","iopub.execute_input":"2025-10-09T09:08:46.818718Z","iopub.status.idle":"2025-10-09T09:08:46.839410Z","shell.execute_reply.started":"2025-10-09T09:08:46.818691Z","shell.execute_reply":"2025-10-09T09:08:46.838052Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"train = pd.read_csv('/kaggle/input/playground-series-s5e10/train.csv')\ntest = pd.read_csv('/kaggle/input/playground-series-s5e10/test.csv')\nsubmission = pd.read_csv('/kaggle/input/playground-series-s5e10/sample_submission.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:46.840496Z","iopub.execute_input":"2025-10-09T09:08:46.840826Z","iopub.status.idle":"2025-10-09T09:08:47.897764Z","shell.execute_reply.started":"2025-10-09T09:08:46.840796Z","shell.execute_reply":"2025-10-09T09:08:47.896532Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"train.head()\n#train.info()\n#train.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:47.898912Z","iopub.execute_input":"2025-10-09T09:08:47.899286Z","iopub.status.idle":"2025-10-09T09:08:47.915514Z","shell.execute_reply.started":"2025-10-09T09:08:47.899239Z","shell.execute_reply":"2025-10-09T09:08:47.914319Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"   id road_type  num_lanes  curvature  speed_limit  lighting weather  \\\n0   0     urban          2       0.06           35  daylight   rainy   \n1   1     urban          4       0.99           35  daylight   clear   \n2   2     rural          4       0.63           70       dim   clear   \n3   3   highway          4       0.07           35       dim   rainy   \n4   4     rural          1       0.58           60  daylight   foggy   \n\n   road_signs_present  public_road time_of_day  holiday  school_season  \\\n0               False         True   afternoon    False           True   \n1                True        False     evening     True           True   \n2               False         True     morning     True          False   \n3                True         True     morning    False          False   \n4               False        False     evening     True          False   \n\n   num_reported_accidents  accident_risk  \n0                       1           0.13  \n1                       0           0.35  \n2                       2           0.30  \n3                       1           0.21  \n4                       1           0.56  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>road_type</th>\n      <th>num_lanes</th>\n      <th>curvature</th>\n      <th>speed_limit</th>\n      <th>lighting</th>\n      <th>weather</th>\n      <th>road_signs_present</th>\n      <th>public_road</th>\n      <th>time_of_day</th>\n      <th>holiday</th>\n      <th>school_season</th>\n      <th>num_reported_accidents</th>\n      <th>accident_risk</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>urban</td>\n      <td>2</td>\n      <td>0.06</td>\n      <td>35</td>\n      <td>daylight</td>\n      <td>rainy</td>\n      <td>False</td>\n      <td>True</td>\n      <td>afternoon</td>\n      <td>False</td>\n      <td>True</td>\n      <td>1</td>\n      <td>0.13</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>urban</td>\n      <td>4</td>\n      <td>0.99</td>\n      <td>35</td>\n      <td>daylight</td>\n      <td>clear</td>\n      <td>True</td>\n      <td>False</td>\n      <td>evening</td>\n      <td>True</td>\n      <td>True</td>\n      <td>0</td>\n      <td>0.35</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>rural</td>\n      <td>4</td>\n      <td>0.63</td>\n      <td>70</td>\n      <td>dim</td>\n      <td>clear</td>\n      <td>False</td>\n      <td>True</td>\n      <td>morning</td>\n      <td>True</td>\n      <td>False</td>\n      <td>2</td>\n      <td>0.30</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>highway</td>\n      <td>4</td>\n      <td>0.07</td>\n      <td>35</td>\n      <td>dim</td>\n      <td>rainy</td>\n      <td>True</td>\n      <td>True</td>\n      <td>morning</td>\n      <td>False</td>\n      <td>False</td>\n      <td>1</td>\n      <td>0.21</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>rural</td>\n      <td>1</td>\n      <td>0.58</td>\n      <td>60</td>\n      <td>daylight</td>\n      <td>foggy</td>\n      <td>False</td>\n      <td>False</td>\n      <td>evening</td>\n      <td>True</td>\n      <td>False</td>\n      <td>1</td>\n      <td>0.56</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"print(\"Duplicated Rows:\",train.duplicated().sum())\nprint(\"-\"*30)\nprint(\"Number of Rows:\",train.shape[0])\nprint(\"-\"*30)\nprint(\"Number of Columns:\",train.shape[1])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:47.916472Z","iopub.execute_input":"2025-10-09T09:08:47.916843Z","iopub.status.idle":"2025-10-09T09:08:48.167592Z","shell.execute_reply.started":"2025-10-09T09:08:47.916812Z","shell.execute_reply":"2025-10-09T09:08:48.166401Z"}},"outputs":[{"name":"stdout","text":"Duplicated Rows: 0\n------------------------------\nNumber of Rows: 517754\n------------------------------\nNumber of Columns: 14\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"train = train.drop(columns=[\"id\"], errors=\"ignore\")\ntest = test.drop(columns=[\"id\"], errors=\"ignore\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:48.168862Z","iopub.execute_input":"2025-10-09T09:08:48.169211Z","iopub.status.idle":"2025-10-09T09:08:48.203709Z","shell.execute_reply.started":"2025-10-09T09:08:48.169182Z","shell.execute_reply":"2025-10-09T09:08:48.202461Z"}},"outputs":[],"execution_count":19},{"cell_type":"markdown","source":"# NOTE: After removing ID, there are duplicate rows, should i delete them ?","metadata":{}},{"cell_type":"code","source":"print(\"Duplicated Rows:\",train.duplicated().sum())\nprint(\"-\"*30)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:48.204782Z","iopub.execute_input":"2025-10-09T09:08:48.205160Z","iopub.status.idle":"2025-10-09T09:08:48.426910Z","shell.execute_reply.started":"2025-10-09T09:08:48.205127Z","shell.execute_reply":"2025-10-09T09:08:48.425805Z"}},"outputs":[{"name":"stdout","text":"Duplicated Rows: 656\n------------------------------\n","output_type":"stream"}],"execution_count":20},{"cell_type":"code","source":"train = train.drop_duplicates()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:48.428496Z","iopub.execute_input":"2025-10-09T09:08:48.428913Z","iopub.status.idle":"2025-10-09T09:08:48.670017Z","shell.execute_reply.started":"2025-10-09T09:08:48.428887Z","shell.execute_reply":"2025-10-09T09:08:48.668798Z"}},"outputs":[],"execution_count":21},{"cell_type":"markdown","source":"# Dividing columns to numerical/categorical for analysis purposes","metadata":{}},{"cell_type":"code","source":"num_cols =  train.select_dtypes(include=\"number\").columns.tolist()\ncat_cols = train.select_dtypes(exclude=\"number\").columns.tolist()\nnum_cols.remove(\"accident_risk\")\n\nprint(f\"categorical columns : {cat_cols}\")\nprint(f\"numerical columns : {num_cols}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:48.671386Z","iopub.execute_input":"2025-10-09T09:08:48.671712Z","iopub.status.idle":"2025-10-09T09:08:48.698934Z","shell.execute_reply.started":"2025-10-09T09:08:48.671683Z","shell.execute_reply":"2025-10-09T09:08:48.697665Z"}},"outputs":[{"name":"stdout","text":"categorical columns : ['road_type', 'lighting', 'weather', 'road_signs_present', 'public_road', 'time_of_day', 'holiday', 'school_season']\nnumerical columns : ['num_lanes', 'curvature', 'speed_limit', 'num_reported_accidents']\n","output_type":"stream"}],"execution_count":22},{"cell_type":"code","source":"# numerical categories corelations\nplt.figure(figsize=(8, 6))\ncorrelation_matrix = train[num_cols + ['accident_risk']].corr()\nsns.heatmap(correlation_matrix, annot=True, fmt='.2f', cmap='coolwarm', \n            linewidths=1)\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:48.699736Z","iopub.execute_input":"2025-10-09T09:08:48.700130Z","iopub.status.idle":"2025-10-09T09:08:49.056057Z","shell.execute_reply.started":"2025-10-09T09:08:48.700102Z","shell.execute_reply":"2025-10-09T09:08:49.054885Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 2 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"# categorical columns vs target\nfig , axes = plt.subplots(2,4, figsize=(16,8))\naxes = axes.flatten()\ncmap = plt.get_cmap('magma')\ncolors = cmap([0.9,0.66,0.33])\ntarget = 'accident_risk'\nfor i,col in enumerate(cat_cols) :\n  \n    grouped = train.groupby(col)[target].mean()\n   \n    axes[i].bar(grouped.index.astype(str), grouped.values , color=colors)  # .astype(str) to handle non-string indices\n    \n    axes[i].set_ylabel(f'Mean {target}')\n    axes[i].set_title(f'{col} vs {target}')\n    axes[i].tick_params(axis='x', rotation=45)\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:49.056974Z","iopub.execute_input":"2025-10-09T09:08:49.057232Z","iopub.status.idle":"2025-10-09T09:08:50.457921Z","shell.execute_reply.started":"2025-10-09T09:08:49.057213Z","shell.execute_reply":"2025-10-09T09:08:50.456755Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1600x800 with 8 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":24},{"cell_type":"markdown","source":"#Log transforms to handle skewness\n\ndf['log_speed'] = np.log1p(df['speed_limit'])\ndf_test['log_speed'] = np.log1p(df_test['speed_limit'])\ndf['log_accidents'] = np.log1p(df['num_reported_accidents'])\ndf_test['log_accidents'] = np.log1p(df_test['num_reported_accidents'])\ndf['log_curvature'] = np.log1p(df['curvature'])\ndf_test['log_curvature'] = np.log1p(df_test['curvature'])","metadata":{}},{"cell_type":"markdown","source":"# Encoding","metadata":{}},{"cell_type":"code","source":"categorical_cols = [\"road_type\", \"lighting\", \"weather\", \"time_of_day\"]\ncombined = pd.concat([train, test], keys=[\"train\", \"test\"])\n\n# One-hot encode categorical columns\ncombined_encoded = pd.get_dummies(combined, columns=categorical_cols, drop_first=False)\n\n# Split back into train and test\ntrain = combined_encoded.xs(\"train\")\ntest = combined_encoded.xs(\"test\")\n\n# Verify result\nprint(train.shape, test.shape)\nprint(train.head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:50.459402Z","iopub.execute_input":"2025-10-09T09:08:50.459753Z","iopub.status.idle":"2025-10-09T09:08:50.834795Z","shell.execute_reply.started":"2025-10-09T09:08:50.459724Z","shell.execute_reply":"2025-10-09T09:08:50.833622Z"}},"outputs":[{"name":"stdout","text":"(517098, 21) (172585, 21)\n   num_lanes  curvature  speed_limit  road_signs_present  public_road  \\\n0          2       0.06           35               False         True   \n1          4       0.99           35                True        False   \n2          4       0.63           70               False         True   \n3          4       0.07           35                True         True   \n4          1       0.58           60               False        False   \n\n   holiday  school_season  num_reported_accidents  accident_risk  \\\n0    False           True                       1           0.13   \n1     True           True                       0           0.35   \n2     True          False                       2           0.30   \n3    False          False                       1           0.21   \n4     True          False                       1           0.56   \n\n   road_type_highway  ...  road_type_urban  lighting_daylight  lighting_dim  \\\n0              False  ...             True               True         False   \n1              False  ...             True               True         False   \n2              False  ...            False              False          True   \n3               True  ...            False              False          True   \n4              False  ...            False               True         False   \n\n   lighting_night  weather_clear  weather_foggy  weather_rainy  \\\n0           False          False          False           True   \n1           False           True          False          False   \n2           False           True          False          False   \n3           False          False          False           True   \n4           False          False           True          False   \n\n   time_of_day_afternoon  time_of_day_evening  time_of_day_morning  \n0                   True                False                False  \n1                  False                 True                False  \n2                  False                False                 True  \n3                  False                False                 True  \n4                  False                 True                False  \n\n[5 rows x 21 columns]\n","output_type":"stream"}],"execution_count":25},{"cell_type":"code","source":"bool_cols_train = train.select_dtypes(include=[\"bool\"]).columns\nbool_cols_test = test.select_dtypes(include=[\"bool\"]).columns\n\n# Ensure both train and test have the same boolean columns (just in case)\nbool_cols = list(set(bool_cols_train) | set(bool_cols_test))\n\n# Convert all boolean columns to integers (True → 1, False → 0)\ntrain[bool_cols] = train[bool_cols].astype(int)\ntest[bool_cols] = test[bool_cols].astype(int)\n\n# Verify the conversion\nprint(\"Converted columns:\", bool_cols)\nprint(train[bool_cols].head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:08:50.835825Z","iopub.execute_input":"2025-10-09T09:08:50.836118Z","iopub.status.idle":"2025-10-09T09:08:50.978493Z","shell.execute_reply.started":"2025-10-09T09:08:50.836097Z","shell.execute_reply":"2025-10-09T09:08:50.977146Z"}},"outputs":[{"name":"stdout","text":"Converted columns: ['road_type_urban', 'school_season', 'lighting_dim', 'road_type_highway', 'weather_rainy', 'time_of_day_afternoon', 'public_road', 'holiday', 'time_of_day_evening', 'lighting_daylight', 'weather_foggy', 'road_signs_present', 'lighting_night', 'road_type_rural', 'weather_clear', 'time_of_day_morning']\n   road_type_urban  school_season  lighting_dim  road_type_highway  \\\n0                1              1             0                  0   \n1                1              1             0                  0   \n2                0              0             1                  0   \n3                0              0             1                  1   \n4                0              0             0                  0   \n\n   weather_rainy  time_of_day_afternoon  public_road  holiday  \\\n0              1                      1            1        0   \n1              0                      0            0        1   \n2              0                      0            1        1   \n3              1                      0            1        0   \n4              0                      0            0        1   \n\n   time_of_day_evening  lighting_daylight  weather_foggy  road_signs_present  \\\n0                    0                  1              0                   0   \n1                    1                  1              0                   1   \n2                    0                  0              0                   0   \n3                    0                  0              0                   1   \n4                    1                  1              1                   0   \n\n   lighting_night  road_type_rural  weather_clear  time_of_day_morning  \n0               0                0              0                    0  \n1               0                0              1                    0  \n2               0                1              1                    1  \n3               0                0              0                    1  \n4               0                1              0                    0  \n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 1 0 ... 1 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 1 0 ... 1 1 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 1 ... 0 0 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 0 ... 0 1 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 0 0 ... 0 0 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 0 0 ... 1 1 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 0 1 ... 0 0 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 1 1 ... 0 1 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 1 0 ... 0 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 1 0 ... 1 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 0 ... 1 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 1 0 ... 0 1 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 0 ... 0 1 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 1 ... 0 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 1 1 ... 0 1 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:8: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 1 ... 0 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  train.loc[:, bool_cols] = train[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 1 1 ... 1 1 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 0 1 ... 1 1 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 1 1 ... 1 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 0 0 ... 0 0 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 0 ... 0 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 1 1 ... 0 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 0 0 ... 0 1 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 1 1 ... 1 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 0 ... 1 0 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 0 ... 0 1 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 1 0 ... 0 1 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 1 1 ... 0 1 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 0 0 ... 0 0 1]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 0 ... 0 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[1 0 1 ... 1 0 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n/tmp/ipykernel_183/626448801.py:9: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0 0 0 ... 0 1 0]' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.\n  test.loc[:, bool_cols] = test[bool_cols].astype(int)\n","output_type":"stream"}],"execution_count":26},{"cell_type":"markdown","source":"# Splitting and training\n","metadata":{}},{"cell_type":"code","source":"X = train.drop(\"accident_risk\", axis=1)\nY = train[\"accident_risk\"]\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:11:42.591021Z","iopub.execute_input":"2025-10-09T09:11:42.591998Z","iopub.status.idle":"2025-10-09T09:11:42.625826Z","shell.execute_reply.started":"2025-10-09T09:11:42.591954Z","shell.execute_reply":"2025-10-09T09:11:42.624781Z"}},"outputs":[],"execution_count":28},{"cell_type":"code","source":"import lightgbm as lgb\nfrom sklearn.model_selection import RandomizedSearchCV, KFold\nfrom sklearn.metrics import make_scorer, mean_squared_error\nfrom catboost import CatBoostRegressor\n\nparam_lgb = {\n    \n    'n_estimators': 2700,\n    'learning_rate': 0.01,\n    'num_leaves': 99,\n    'max_depth': 13,\n    'min_child_samples': 10,\n    'min_child_weight': 0.002,\n    'subsample': 0.60,\n    'subsample_freq': 1,\n    'colsample_bytree': 0.83,\n    'reg_alpha': 0.01,\n    'reg_lambda':  0.70,\n    'min_split_gain':  0.004,\n    'feature_fraction': 0.9 , \n\n \n}\n\nparam_cat = {\n     'bagging_temperature' : 0.20,\n     'border_count'        : 178,\n     'depth'               : 8,\n     'iterations'          : 1600,\n     'l2_leaf_reg'         : 4,\n     'learning_rate'       : 0.04,\n     'random_strength'    : 0.32,\n     \n}\n\n\nprint(\"\\n\" + \"=\"*60)\nprint(\"Simple Average (90-10)\")\nprint(\"=\"*60)\n\ncat_model =  CatBoostRegressor(**param_cat,\n                               loss_function='RMSE',\n                               random_seed=42,\n                               verbose=False,\n                               thread_count=-1,)\n\nlgb_model = lgb.LGBMRegressor(**param_lgb ,\n                               objective='regression',\n                               metric='rmse',\n                               boosting_type='gbdt',\n                               random_state=42,\n                               n_jobs=-1,\n                               verbose=-1    \n                            )  \n\nkfold = KFold(n_splits=5, shuffle=True, random_state=42)\ncv_scores = []\n\nfor fold, (train_idx, val_idx) in enumerate(kfold.split(X), 1):\n    X_tr, X_val = X.iloc[train_idx], X.iloc[val_idx]\n    y_tr, y_val = Y.iloc[train_idx], Y.iloc[val_idx]\n    \n    \n    # Train cat\n    cat_model.fit(X_tr, y_tr)\n    cat_pred = cat_model.predict(X_val)\n    \n    # Train LightGBM\n    lgb_model.fit(X_tr, y_tr)\n    lgb_pred = lgb_model.predict(X_val)\n    \n    # Simple average\n    ensemble_pred = 0.1  * cat_pred + 0.9 * lgb_pred\n    \n    rmse = np.sqrt(mean_squared_error(y_val, ensemble_pred))\n    cv_scores.append(rmse)\n    print(f\"Fold {fold}: {rmse:.5f}\")\n\nsimple_avg_score = np.mean(cv_scores)\nprint(f\"\\nSimple Average CV Score: {simple_avg_score:.5f} (+/- {np.std(cv_scores):.5f})\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-09T09:13:33.191513Z","iopub.execute_input":"2025-10-09T09:13:33.191862Z","iopub.status.idle":"2025-10-09T09:18:34.877213Z","shell.execute_reply.started":"2025-10-09T09:13:33.191841Z","shell.execute_reply":"2025-10-09T09:18:34.875598Z"}},"outputs":[{"name":"stdout","text":"\n============================================================\nSimple Average (90-10)\n============================================================\nFold 1: 0.05590\nFold 2: 0.05618\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_183/2242218537.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     63\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     64\u001b[0m     \u001b[0;31m# Train cat\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 65\u001b[0;31m     \u001b[0mcat_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_tr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_tr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     66\u001b[0m     \u001b[0mcat_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcat_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_val\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     67\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/catboost/core.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, cat_features, text_features, embedding_features, graph, sample_weight, baseline, use_best_model, eval_set, verbose, logging_level, plot, plot_file, column_description, verbose_eval, metric_period, silent, early_stopping_rounds, save_snapshot, snapshot_file, snapshot_interval, init_model, callbacks, log_cout, log_cerr)\u001b[0m\n\u001b[1;32m   5871\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;34m'loss_function'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5872\u001b[0m             \u001b[0mCatBoostRegressor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_is_compatible_loss\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'loss_function'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5873\u001b[0;31m         return self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline,\n\u001b[0m\u001b[1;32m   5874\u001b[0m                          \u001b[0muse_best_model\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0meval_set\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogging_level\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mplot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mplot_file\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumn_description\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5875\u001b[0m                          \u001b[0mverbose_eval\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetric_period\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msilent\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mearly_stopping_rounds\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/catboost/core.py\u001b[0m in \u001b[0;36m_fit\u001b[0;34m(self, X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id, pairs_weight, baseline, use_best_model, eval_set, verbose, logging_level, plot, plot_file, column_description, verbose_eval, metric_period, silent, early_stopping_rounds, save_snapshot, snapshot_file, snapshot_interval, init_model, callbacks, log_cout, log_cerr)\u001b[0m\n\u001b[1;32m   2408\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2409\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mplot_wrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mplot_file\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Training plots'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0m_get_train_dir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_params\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2410\u001b[0;31m                 self._train(\n\u001b[0m\u001b[1;32m   2411\u001b[0m                     \u001b[0mtrain_pool\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2412\u001b[0m                     \u001b[0mtrain_params\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"eval_sets\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/catboost/core.py\u001b[0m in \u001b[0;36m_train\u001b[0;34m(self, train_pool, test_pool, params, allow_clear_pool, init_model)\u001b[0m\n\u001b[1;32m   1788\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1789\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_train\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_pool\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_pool\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mallow_clear_pool\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minit_model\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1790\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_object\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_train\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_pool\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_pool\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mallow_clear_pool\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minit_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_object\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0minit_model\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1791\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_trained_model_attributes\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1792\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m_catboost.pyx\u001b[0m in \u001b[0;36m_catboost._CatBoost._train\u001b[0;34m()\u001b[0m\n","\u001b[0;32m_catboost.pyx\u001b[0m in \u001b[0;36m_catboost._CatBoost._train\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "],"ename":"KeyboardInterrupt","evalue":"","output_type":"error"}],"execution_count":29},{"cell_type":"code","source":"# Train on full data and predict\n\ncat_model.fit(X, Y)\ncat_test_pred = cat_model.predict(test)\n\nlgb_model.fit(X, Y)\nlgb_test_pred = lgb_model.predict(test)\n\nensemble_pred = 0.5 * cat_test_pred + 0.5 * lgb_test_pred\ndf_sub['accident_risk'] = ensemble_pred\ndf_sub.to_csv('submission.csv', index=False)\ndf_sub.head()","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}